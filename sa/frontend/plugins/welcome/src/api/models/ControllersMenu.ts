/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API Menu
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ControllersMenu
 */
export interface ControllersMenu {
    /**
     * 
     * @type {string}
     * @memberof ControllersMenu
     */
    addedtime?: string;
    /**
     * 
     * @type {number}
     * @memberof ControllersMenu
     */
    calories?: number;
    /**
     * 
     * @type {number}
     * @memberof ControllersMenu
     */
    groupID?: number;
    /**
     * 
     * @type {string}
     * @memberof ControllersMenu
     */
    ingredient?: string;
    /**
     * 
     * @type {string}
     * @memberof ControllersMenu
     */
    menuname?: string;
    /**
     * 
     * @type {number}
     * @memberof ControllersMenu
     */
    typeID?: number;
    /**
     * 
     * @type {number}
     * @memberof ControllersMenu
     */
    userID?: number;
}

export function ControllersMenuFromJSON(json: any): ControllersMenu {
    return ControllersMenuFromJSONTyped(json, false);
}

export function ControllersMenuFromJSONTyped(json: any, ignoreDiscriminator: boolean): ControllersMenu {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'addedtime': !exists(json, 'addedtime') ? undefined : json['addedtime'],
        'calories': !exists(json, 'calories') ? undefined : json['calories'],
        'groupID': !exists(json, 'groupID') ? undefined : json['groupID'],
        'ingredient': !exists(json, 'ingredient') ? undefined : json['ingredient'],
        'menuname': !exists(json, 'menuname') ? undefined : json['menuname'],
        'typeID': !exists(json, 'typeID') ? undefined : json['typeID'],
        'userID': !exists(json, 'userID') ? undefined : json['userID'],
    };
}

export function ControllersMenuToJSON(value?: ControllersMenu | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'addedtime': value.addedtime,
        'calories': value.calories,
        'groupID': value.groupID,
        'ingredient': value.ingredient,
        'menuname': value.menuname,
        'typeID': value.typeID,
        'userID': value.userID,
    };
}


