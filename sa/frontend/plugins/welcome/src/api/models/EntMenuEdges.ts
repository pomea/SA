/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API Menu
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntMenugroup,
    EntMenugroupFromJSON,
    EntMenugroupFromJSONTyped,
    EntMenugroupToJSON,
    EntMenutype,
    EntMenutypeFromJSON,
    EntMenutypeFromJSONTyped,
    EntMenutypeToJSON,
    EntUser,
    EntUserFromJSON,
    EntUserFromJSONTyped,
    EntUserToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntMenuEdges
 */
export interface EntMenuEdges {
    /**
     * 
     * @type {EntMenugroup}
     * @memberof EntMenuEdges
     */
    group?: EntMenugroup;
    /**
     * 
     * @type {EntUser}
     * @memberof EntMenuEdges
     */
    owner?: EntUser;
    /**
     * 
     * @type {EntMenutype}
     * @memberof EntMenuEdges
     */
    type?: EntMenutype;
}

export function EntMenuEdgesFromJSON(json: any): EntMenuEdges {
    return EntMenuEdgesFromJSONTyped(json, false);
}

export function EntMenuEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntMenuEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'group': !exists(json, 'Group') ? undefined : EntMenugroupFromJSON(json['Group']),
        'owner': !exists(json, 'Owner') ? undefined : EntUserFromJSON(json['Owner']),
        'type': !exists(json, 'Type') ? undefined : EntMenutypeFromJSON(json['Type']),
    };
}

export function EntMenuEdgesToJSON(value?: EntMenuEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'group': EntMenugroupToJSON(value.group),
        'owner': EntUserToJSON(value.owner),
        'type': EntMenutypeToJSON(value.type),
    };
}


