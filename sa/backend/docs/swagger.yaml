basePath: /api/v1
definitions:
  controllers.Menu:
    properties:
      addedtime:
        type: string
      calories:
        type: integer
      groupID:
        type: integer
      ingredient:
        type: string
      menuname:
        type: string
      typeID:
        type: integer
      userID:
        type: integer
    type: object
  ent.Menu:
    properties:
      added_time:
        description: AddedTime holds the value of the "added_time" field.
        type: string
      calories:
        description: Calories holds the value of the "calories" field.
        type: integer
      edges:
        $ref: '#/definitions/ent.MenuEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the MenuQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      ingredient:
        description: Ingredient holds the value of the "ingredient" field.
        type: string
      menuname:
        description: Menuname holds the value of the "menuname" field.
        type: string
    type: object
  ent.MenuEdges:
    properties:
      group:
        $ref: '#/definitions/ent.Menugroup'
        description: Group holds the value of the group edge.
        type: object
      owner:
        $ref: '#/definitions/ent.User'
        description: Owner holds the value of the owner edge.
        type: object
      type:
        $ref: '#/definitions/ent.Menutype'
        description: Type holds the value of the type edge.
        type: object
    type: object
  ent.Menugroup:
    properties:
      edges:
        $ref: '#/definitions/ent.MenugroupEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the MenugroupQuery when eager-loading is set.
        type: object
      group:
        description: Group holds the value of the "group" field.
        type: string
      id:
        description: ID of the ent.
        type: integer
    type: object
  ent.MenugroupEdges:
    properties:
      menus:
        description: Menus holds the value of the menus edge.
        items:
          $ref: '#/definitions/ent.Menu'
        type: array
    type: object
  ent.Menutype:
    properties:
      edges:
        $ref: '#/definitions/ent.MenutypeEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the MenutypeQuery when eager-loading is set.
        type: object
      id:
        description: ID of the ent.
        type: integer
      type:
        description: Type holds the value of the "type" field.
        type: string
    type: object
  ent.MenutypeEdges:
    properties:
      menus:
        description: Menus holds the value of the menus edge.
        items:
          $ref: '#/definitions/ent.Menu'
        type: array
    type: object
  ent.User:
    properties:
      edges:
        $ref: '#/definitions/ent.UserEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the UserQuery when eager-loading is set.
        type: object
      email:
        description: Email holds the value of the "email" field.
        type: string
      id:
        description: ID of the ent.
        type: integer
      name:
        description: Name holds the value of the "name" field.
        type: string
    type: object
  ent.UserEdges:
    properties:
      menus:
        description: Menus holds the value of the menus edge.
        items:
          $ref: '#/definitions/ent.Menu'
        type: array
    type: object
  gin.H:
    additionalProperties: true
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for SUT SE 2563
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SUT SA Example API Menu
  version: "1.0"
paths:
  /menugroups:
    get:
      description: list menugroup entities
      operationId: list-menugroup
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Menugroup'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List menugroup entities
    post:
      consumes:
      - application/json
      description: Create menugroup
      operationId: create-menugroup
      parameters:
      - description: Menugroup entity
        in: body
        name: menugroup
        required: true
        schema:
          $ref: '#/definitions/ent.Menugroup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Menugroup'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create menugroup
  /menugroups/{id}:
    delete:
      description: get menugroup by ID
      operationId: delete-menugroup
      parameters:
      - description: Menugroup ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a menugroup entity by ID
    get:
      description: get menugroup by ID
      operationId: get-menugroup
      parameters:
      - description: Menugroup ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Menugroup'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a menugroup entity by ID
    put:
      consumes:
      - application/json
      description: update menugroup by ID
      operationId: update-menugroup
      parameters:
      - description: Menugroup ID
        in: path
        name: id
        required: true
        type: integer
      - description: Menugroup entity
        in: body
        name: menugroup
        required: true
        schema:
          $ref: '#/definitions/ent.Menugroup'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Menugroup'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a menugroup entity by ID
  /menus:
    get:
      description: list menu entities
      operationId: list-menu
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Menu'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List menu entities
    post:
      consumes:
      - application/json
      description: Create menu
      operationId: create-menu
      parameters:
      - description: Menu entity
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/controllers.Menu'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Menu'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create menu
  /menus/{id}:
    delete:
      description: get menu by ID
      operationId: delete-menu
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a menu entity by ID
    get:
      description: get menu by ID
      operationId: get-menu
      parameters:
      - description: Menu ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Menu'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a menu entity by ID
  /menutypes:
    get:
      description: list menutype entities
      operationId: list-menutype
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.Menutype'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List menutype entities
    post:
      consumes:
      - application/json
      description: Create menutype
      operationId: create-menutype
      parameters:
      - description: Menutype entity
        in: body
        name: menutype
        required: true
        schema:
          $ref: '#/definitions/ent.Menutype'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Menutype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create menutype
  /menutypes/{id}:
    delete:
      description: get menutype by ID
      operationId: delete-menutype
      parameters:
      - description: Menutype ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a menutype entity by ID
    get:
      description: get menutype by ID
      operationId: get-menutype
      parameters:
      - description: Menutype ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Menutype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a menutype entity by ID
    put:
      consumes:
      - application/json
      description: update menutype by ID
      operationId: update-menutype
      parameters:
      - description: Menutype ID
        in: path
        name: id
        required: true
        type: integer
      - description: Menutype entity
        in: body
        name: menutype
        required: true
        schema:
          $ref: '#/definitions/ent.Menutype'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.Menutype'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a menutype entity by ID
  /users:
    get:
      description: list user entities
      operationId: list-user
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.User'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: List user entities
    post:
      consumes:
      - application/json
      description: Create user
      operationId: create-user
      parameters:
      - description: User entity
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/ent.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create user
  /users/{id}:
    delete:
      description: get user by ID
      operationId: delete-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a user entity by ID
    get:
      description: get user by ID
      operationId: get-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a user entity by ID
    put:
      consumes:
      - application/json
      description: update user by ID
      operationId: update-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User entity
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/ent.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a user entity by ID
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2AccessCode:
    authorizationUrl: https://example.com/oauth/authorize
    flow: accessCode
    scopes:
      admin: ' Grants read and write access to administrative information'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Application:
    authorizationUrl: ""
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
  OAuth2Implicit:
    authorizationUrl: https://example.com/oauth/authorize
    flow: implicit
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    type: oauth2
  OAuth2Password:
    authorizationUrl: ""
    flow: password
    scopes:
      admin: ' Grants read and write access to administrative information'
      read: ' Grants read access'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
