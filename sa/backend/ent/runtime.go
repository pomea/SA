// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/pomea/app/ent/menu"
	"github.com/pomea/app/ent/schema"
	"github.com/pomea/app/ent/user"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	menuFields := schema.Menu{}.Fields()
	_ = menuFields
	// menuDescMenuname is the schema descriptor for menuname field.
	menuDescMenuname := menuFields[0].Descriptor()
	// menu.MenunameValidator is a validator for the "menuname" field. It is called by the builders before save.
	menu.MenunameValidator = menuDescMenuname.Validators[0].(func(string) error)
	// menuDescCalories is the schema descriptor for calories field.
	menuDescCalories := menuFields[2].Descriptor()
	// menu.CaloriesValidator is a validator for the "calories" field. It is called by the builders before save.
	menu.CaloriesValidator = menuDescCalories.Validators[0].(func(int) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[0].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[1].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
}
